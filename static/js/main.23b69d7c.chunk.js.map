{"version":3,"sources":["util/api.js","components/Search.js","components/Nav.js","components/Home.js","components/Loading.js","components/Day.js","components/Forecast.js","components/App.js","index.js"],"names":["id","api","fetchWeather","city","currentURI","window","encodeURI","currentWeather","axios","get","then","response","data","list","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","target","setState","location","handleSubmit","preventDefault","onSubmit","state","react_default","a","createElement","className","formType","placeholder","type","autoComplete","onChange","disabled","React","Component","Nav","split","console","log","weather","Link","to","components_Search","Home","redirectURI","history","push","Loading","updateStr","str","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","Icon","imgPath","icon","dateStr","dateFormat","dt","src","alt","Day","toFahrenheit","kelvin","Math","round","description","main","temp_min","temp_max","humidity","Forecast","queryString","parse","search","toUpperCase","slice","length","isLoading","bind","assertThisInitialized","loadingStr","components_Loading","components_Day","Router","BrowserRouter","App","components_Nav","Switch","Route","exact","path","component","ReactDOM","render","components_App","document","getElementById"],"mappings":"0RAEIA,EAAM,mCASK,IAAAC,EAAA,CACbC,aADa,SACAC,GACX,IAAIC,EATR,SAAwBD,GACtB,OAAOE,OAAOC,UAAU,sDAAwDH,EAAO,wBAA0BH,GAQ9FO,CAAeJ,GAGhC,OAAOK,IAAMC,IAAIL,GACdM,KAAK,SAASC,GAEb,OAAOA,EAASC,KAAKC,KAAK,OC+BnBC,cA/Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,aAAe,SAAAC,GACb,IAAIC,EAAQD,EAAME,OAAOD,MAEzBT,EAAKW,SAAS,CACZC,SAAUH,KAZKT,EAenBa,aAAe,SAAAL,GACbA,EAAMM,iBAENd,EAAKD,MAAMgB,SACTP,EACAR,EAAKgB,MAAMJ,WAjBbZ,EAAKgB,MAAQ,CACXJ,SAAU,IAJKZ,wEAyBjB,OACEiB,EAAAC,EAAAC,cAAA,QAAMC,UAAWjB,KAAKJ,MAAMsB,SAAUN,SAAUZ,KAAKU,cACjDI,EAAAC,EAAAC,cAAA,SACEC,UAAU,SACVE,YAAY,kBACZC,KAAK,OACLd,MAAON,KAAKa,MAAMJ,SAClBY,aAAa,MACbC,SAAUtB,KAAKI,eAEjBU,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVG,KAAK,SACLG,UAAWvB,KAAKa,MAAMJ,UAHxB,uBApCWe,IAAMC,WCqCZC,cAjCb,SAAAA,EAAY9B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACjB7B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,KAAMJ,KAORc,aAAe,SAACL,EAAOI,GACrBJ,EAAMM,iBACN,IAAIL,EAAQG,EAERzB,EAAOsB,EAAMqB,MAAM,KAAK,GACxBd,EAAQP,EAAMqB,MAAM,KAAK,GAE7BC,QAAQC,IAAI7C,EAAM6B,GAElB/B,EAAIC,aAAaC,EAAM6B,GACpBtB,KAAK,SAASuC,GACbF,QAAQC,IAAIC,MAhBhBjC,EAAKgB,MAAQ,CACXJ,SAAU,IAJKZ,wEAwBjB,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMd,UAAU,OAAOe,GAAG,iBAAiBlB,EAAAC,EAAAC,cAAA,+BAC3CF,EAAAC,EAAAC,cAACiB,EAAD,CAAQf,SAAS,WAAWN,SAAUZ,KAAKU,uBA5BjCc,IAAMC,WC6BTS,cA9Bb,SAAAA,EAAYtC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACjBrC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,KAAMJ,KAORc,aAAe,SAACL,EAAOI,GACrBJ,EAAMM,iBAEN,IACIwB,EAAc,kBADNjD,OAAOC,UAAUsB,GAG7BZ,EAAKD,MAAMwC,QAAQC,KAAKF,IAXxBtC,EAAKgB,MAAQ,CACX7B,KAAM,IAJSa,wEAkBjB,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,0BACAH,EAAAC,EAAAC,cAACiB,EAAD,CACEf,SAAS,YACTN,SAAUZ,KAAKU,uBAxBNc,IAAMC,oCCiCVa,cAjCb,SAAAA,EAAY1C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,IACjBzC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAnC,KAAAH,KAAMJ,KAOR2C,UAAY,WACV,IAAIC,EAAM3C,EAAKgB,MAAM2B,IAET,eAARA,EACF3C,EAAKW,SAAS,CAAEgC,IAAK,aAGrB3C,EAAKW,SAAS,CAAEgC,IAAKA,EAAM,OAfZ3C,EAmBnB4C,kBAAoB,WAClB5C,EAAK6C,SAAWC,YAAY9C,EAAK0C,UAAW,MApB3B1C,EAsBnB+C,qBAAuB,WACrBC,cAAchD,EAAK6C,WApBnB7C,EAAKgB,MAAQ,CACX2B,IAAK,YAJU3C,wEA2BjB,OACEiB,EAAAC,EAAAC,cAAA,WAAMhB,KAAKa,MAAM2B,YA7BDhB,IAAMC,4BCC5B,SAASqB,EAAKlD,GACZ,IAAIH,EAAOG,EAAMH,KACbsD,EAAU,uBAAyBtD,EAAKqC,QAAQ,GAAGkB,KAAO,OAE1DC,EAAUC,IAAWzD,EAAK0D,GAAI,iBAElC,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOmC,IAAKL,EAASM,IAAI,iBACxCvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAcgC,QA6BnBK,6MAvBbC,aAAe,SAAAC,GACb,OAAOC,KAAKC,MAAe,EAATF,EAAa,EAAI,iFAInC,IAAI/D,EAAOO,KAAKJ,MAAMH,KAEtB,OACEqB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAD,CAAMrD,KAAMA,IAEZqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,SAAIhB,KAAKJ,MAAMZ,MACf8B,EAAAC,EAAAC,cAAA,SAAIvB,EAAKqC,QAAQ,GAAG6B,aACpB7C,EAAAC,EAAAC,cAAA,sBAAchB,KAAKuD,aAAa9D,EAAKmE,KAAKC,UAA1C,SACA/C,EAAAC,EAAAC,cAAA,sBAAchB,KAAKuD,aAAa9D,EAAKmE,KAAKE,UAA1C,SACAhD,EAAAC,EAAAC,cAAA,sBAAcvB,EAAKmE,KAAKG,SAAxB,cAjBQvC,IAAMC,WCiCTuC,cA3Cb,SAAAA,EAAYpE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IACjBnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,KAAMJ,KAUR6C,kBAAoB,WAClB,IACIzD,EADWiF,IAAYC,MAAMrE,EAAKD,MAAMa,SAAS0D,QAAQnF,KACzC2C,MAAM,KAAK,GAC/B3C,EAAOA,EAAK,GAAGoF,cAAgBpF,EAAKqF,MAAM,EAAGrF,EAAKsF,QAElDxF,EAAIC,aAAaC,GACdO,KAAK,SAASE,GACbmC,QAAQC,IAAIpC,GACZO,KAAKQ,SAAS,CACZ+D,WAAW,EACXvF,OACAS,UAEF+E,KAPI1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAD,OAdRA,EAAKgB,MAAQ,CACX7B,KAAM,GACNuF,WAAW,EACXG,WAAY,WACZjF,KAAM,MAPSI,wEA4BjB,IAAIJ,EAAOO,KAAKa,MAAMpB,KAGtB,OAFAmC,QAAQC,IAAIpC,GAGVqB,EAAAC,EAAAC,cAAA,WACGhB,KAAKa,MAAM0D,WAAazD,EAAAC,EAAAC,cAAC2D,EAAD,MAExBlF,GACCqB,EAAAC,EAAAC,cAAC4D,EAAD,CAAKnF,KAAMA,EAAMT,KAAMgB,KAAKa,MAAM7B,eArCrBwC,IAAMC,WCAzBoD,EAASC,IAkBEC,mLAdX,OACEjE,EAAAC,EAAAC,cAAC6D,EAAD,KACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgE,EAAD,MACAlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWnD,IAC7CpB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOE,KAAK,wBAAwBC,UAAWrB,cARzCxC,IAAMC,WCHxB6D,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.23b69d7c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet id  = 'e3f00766f0f14117d085486ead35eb5b';\r\n\r\nfunction currentWeather(city) {\r\n  return window.encodeURI('https://api.openweathermap.org/data/2.5/forecast?q=' + city + '&type=accurate&APPID=' + id);\r\n}\r\nfunction fiveDayWeather(city) {\r\n  return window.encodeURI('https://api.openweathermap.org/data/2.5/forecast?q=' + city + '&type=accurate&APPID=' + id + '&cnt=5');\r\n}\r\n\r\nexport default {\r\n  fetchWeather(city) {\r\n    let currentURI = currentWeather(city);\r\n    \r\n\r\n    return axios.get(currentURI)\r\n      .then(function(response) {\r\n        // return response;\r\n        return response.data.list[0];\r\n      })\r\n  }\r\n}","import React from 'react';\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      location: ''\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    var value = event.target.value;\r\n\r\n    this.setState({\r\n      location: value\r\n    })\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(\r\n      event,\r\n      this.state.location\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <form className={this.props.formType} onSubmit={this.handleSubmit} >\r\n          <input \r\n            className='search'\r\n            placeholder='Mobile, Alabama'\r\n            type='text'\r\n            value={this.state.location}\r\n            autoComplete='off'\r\n            onChange={this.handleChange}\r\n          />\r\n          <button \r\n            className='btn btn-success'\r\n            type='submit'\r\n            disabled={!this.state.location} \r\n          >\r\n            Get Weather\r\n          </button>\r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../util/api.js';\r\nimport Search from './Search.js';\r\n\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      location: '',\r\n    }\r\n  }\r\n  \r\n  handleSubmit = (event, location) => {\r\n    event.preventDefault()\r\n    let value = location;\r\n\r\n    let city = value.split(',')[0];\r\n    let state = value.split(' ')[1];\r\n\r\n    console.log(city, state)\r\n\r\n    api.fetchWeather(city, state)\r\n      .then(function(weather) {\r\n        console.log(weather);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='nav' >\r\n        <Link className='link' to='/weather-app/' ><h1>Best Weather App</h1></Link>\r\n        <Search formType='nav-form' onSubmit={this.handleSubmit} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport Search from './Search.js';\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      city: ''\r\n    }\r\n  }\r\n  \r\n  handleSubmit = (event, location) => {\r\n    event.preventDefault()\r\n\r\n    let value = window.encodeURI(location);\r\n    let redirectURI = '/forecast?city=' + value\r\n    \r\n    this.props.history.push(redirectURI)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='home-container' >\r\n        <h1 className='header' >Enter a City and State</h1>\r\n        <Search \r\n          formType='home-form'\r\n          onSubmit={this.handleSubmit}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nclass Loading extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      str: 'Loading.'\r\n    }\r\n  }\r\n\r\n  updateStr = () => {\r\n    let str = this.state.str;\r\n\r\n    if (str === 'Loading...') {\r\n      this.setState({ str: 'Loading.' })\r\n    } \r\n    else {\r\n      this.setState({ str: str + '.' })\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.interval = setInterval(this.updateStr, 300)\r\n  }\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>{this.state.str}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport dateFormat from 'dateformat';\r\n\r\nfunction Icon(props) {\r\n  let data = props.data\r\n  let imgPath = '../../weather-icons/' + data.weather[0].icon + '.svg'\r\n  \r\n  let dateStr = dateFormat(data.dt, \"dddd, mmmm dS\")\r\n\r\n  return (\r\n    <div className=\"day-container\" >\r\n      <img className='icon' src={imgPath} alt='weather icon' />\r\n      <h2 className='subheader' >{dateStr}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Day extends React.Component {\r\n  toFahrenheit = kelvin => {\r\n    return Math.round(kelvin * 9 / 5 - 459.67)\r\n  }\r\n  \r\n  render() {\r\n    let data = this.props.data;\r\n\r\n    return(\r\n      <div>\r\n        <Icon data={data} />\r\n        \r\n        <div className='description-container'>\r\n          <p>{this.props.city}</p> \r\n          <p>{data.weather[0].description}</p> \r\n          <p>Min Temp: {this.toFahrenheit(data.main.temp_min)}&#176;F</p> \r\n          <p>Max Temp: {this.toFahrenheit(data.main.temp_max)}&#176;F</p> \r\n          <p>Humidity: {data.main.humidity}%</p>\r\n        </div>       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Day;","import React from 'react';\r\nimport queryString from  'query-string';\r\nimport api from '../util/api.js';\r\nimport Loading from './Loading.js';\r\nimport Day from './Day.js';\r\n\r\nclass Forecast extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      city: '',\r\n      isLoading: true,\r\n      loadingStr: 'loading.',\r\n      data: null\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let location = queryString.parse(this.props.location.search).city;\r\n    let city = location.split(',')[0]\r\n    city = city[0].toUpperCase() + city.slice(1, city.length);\r\n\r\n    api.fetchWeather(city)\r\n      .then(function(data) {\r\n        console.log(data);\r\n        this.setState({ \r\n          isLoading: false,\r\n          city,\r\n          data\r\n        })\r\n      }.bind(this));\r\n  }\r\n\r\n  render() {\r\n    let data = this.state.data;\r\n    console.log(data)\r\n    \r\n    return (\r\n      <div>\r\n        {this.state.isLoading && <Loading />}\r\n\r\n        {data &&\r\n          <Day data={data} city={this.state.city} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Forecast;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Nav from './Nav.js';\r\nimport Home from './Home.js';\r\nimport Forecast from './Forecast.js';\r\n\r\nlet Router = BrowserRouter;\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className='container' >\r\n          <Nav />\r\n          <Switch>\r\n            <Route exact path='/weather-app/' component={Home} />\r\n            <Route path='/weather-app/forecast' component={Forecast} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}